-- Find the 5 oldest users of Instagram
SELECT username, created_at
FROM users
ORDER BY created_at
LIMIT 5;



-- Find the users who have never posted a single photo on Instagram
SELECT u.username
FROM users AS u
LEFT JOIN photos AS p ON p.user_id = u.id
WHERE p.image_url IS NULL;



-- Identify the winner of the contest and provide their details to the team
SELECT likes.photo_id, users.username, COUNT(likes.user_id) AS likes_count
FROM likes
INNER JOIN photos ON likes.photo_id = photos.id
INNER JOIN users ON photos.user_id = users.id
GROUP BY likes.photo_id, users.username
ORDER BY likes_count DESC
LIMIT 1;



-- Identify and suggest the top 5 most commonly used hashtags on the platform
SELECT t.tag_name, COUNT(p.photo_id) AS tag_count
FROM photo_tags p
INNER JOIN tags t ON t.id = p.tag_id
GROUP BY t.tag_name
ORDER BY tag_count DESC
LIMIT 5;



-- What day of the week do most users register on? Provide insights on when to schedule an ad campaign
SELECT DATE_FORMAT(created_at, '%W') AS registration_day, COUNT(*) AS registration_count
FROM users
GROUP BY registration_day
ORDER BY registration_count DESC;



-- Provide how many times does the average user post on Instagram. Also, provide the total number of photos on Instagram divided by the total number of users
SELECT 
    AVG(PostsCount) AS avg_posts_per_user,
    TotalPhotos.TotalPhotos AS total_photos,
    TotalUsers.TotalUsers AS total_users,
    TotalPhotos.TotalPhotos / TotalUsers.TotalUsers AS photos_per_user_ratio
FROM (
    SELECT user_id, COUNT(*) AS PostsCount
    FROM photos
    GROUP BY user_id
) AS PostCounts
CROSS JOIN (
    SELECT COUNT(*) AS TotalPhotos
    FROM photos
) AS TotalPhotos
CROSS JOIN (
    SELECT COUNT(*) AS TotalUsers
    FROM users
) AS TotalUsers;
